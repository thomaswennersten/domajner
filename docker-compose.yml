version: '3.8'

services:
  domajner:
    build: .
    container_name: domajner-app
    ports:
      - "3000:3000"
    volumes:
      # Persistent data storage
      - ./data/allowed_domains.txt:/app/allowed_domains.txt
      - ./data/services.json:/app/services.json
      - ./data/one_time_links.json:/app/one_time_links.json
      - ./data/verification_code.txt:/app/verification_code.txt
    environment:
      # SMTP Configuration
      - SMTP_HOST=${SMTP_HOST:-172.17.0.1}
      - SMTP_PORT=${SMTP_PORT:-25}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_AUTH=${SMTP_AUTH:-false}
      - SENDER_EMAIL=${SENDER_EMAIL:-noreply@localhost}
      
      # Application Settings
      - PORT=3000
      - NODE_ENV=${NODE_ENV:-production}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-changeme}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request({hostname: 'localhost', port: 3000, path: '/api/health'}, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: domajner-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - domajner
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  data:
    driver: local